channel D0_0_in
channel D0_0_out
channel d0_0_in
channel X0_0_in
channel D0_1_in
channel D0_1_out
channel d0_1_in
channel X0_1_in
channel D0_2_in
channel D0_2_out
channel d0_2_in
channel X0_2_in
channel D0_3_in
channel D0_3_out
channel d0_3_in
channel X0_3_in
channel D0_4_in
channel D0_4_out
channel d0_4_in
channel X0_4_in
channel D0_5_in
channel D0_5_out
channel d0_5_in
channel X0_5_in
channel D0_6_in
channel D0_6_out
channel d0_6_in
channel X0_6_in
channel D1_0_in
channel D1_0_out
channel d1_0_in
channel X1_0_in
channel D1_1_in
channel D1_1_out
channel d1_1_in
channel X1_1_in
channel D2_0_in
channel D2_0_out
channel d2_0_in
channel X2_0_in
channel D3_0_in
channel D3_0_out
channel d3_0_in
channel X3_0_in
channel S0_7_in
channel S0_7_out
channel S0_8_in
channel S0_8_out
channel S0_9_in
channel S0_9_out
channel S0_10_in
channel S0_10_out
channel S1_0_in
channel S1_0_out
channel S1_2_in
channel S1_2_out
channel S1_4_in
channel S1_4_out
channel S2_0_in
channel S2_0_out
channel S2_2_in
channel S2_2_out
channel S3_0_in
channel S3_0_out
channel S3_2_in
channel S3_2_out
channel B0
channel d1_0_out_1
channel X1_0_out_1
channel d0_0_out_3
channel X0_0_out_3
channel d0_3_out_4
channel X0_3_out_4
channel d0_1_out_5
channel X0_1_out_5
channel d0_2_out_6
channel X0_2_out_6

skip_loop = SKIP; skip_loop
d1_0_out_skip_loop = SKIP [] (d1_0_out_1 -> SKIP); d1_0_out_skip_loop
d0_0_out_skip_loop = SKIP [] (d0_0_out_3 -> SKIP); d0_0_out_skip_loop
d0_3_out_skip_loop = SKIP [] (d0_3_out_4 -> SKIP); d0_3_out_skip_loop
d0_1_out_skip_loop = SKIP [] (d0_1_out_5 -> SKIP); d0_1_out_skip_loop
d0_2_out_skip_loop = SKIP [] (d0_2_out_6 -> SKIP); d0_2_out_skip_loop
X1_0(0) = SKIP [] (X1_0_in -> SKIP; (SKIP [] X1_0_out_1 -> SKIP))
X0_0(0) = SKIP [] (X0_0_in -> SKIP; (SKIP [] X0_0_out_3 -> SKIP))
X0_3(0) = SKIP [] (X0_3_in -> SKIP; (SKIP [] X0_3_out_4 -> SKIP))
X0_1(0) = SKIP [] (X0_1_in -> SKIP; (SKIP [] X0_1_out_5 -> SKIP))
X0_2(0) = SKIP [] (X0_2_in -> SKIP; (SKIP [] X0_2_out_6 -> SKIP))

T0 = (D1_0_out -> d1_0_in -> X1_0_in -> SKIP [] (d1_0_out_1 -> SKIP; T0) [] X1_0_out_1 -> D1_1_out -> d1_1_in -> X1_1_in -> SKIP [] D2_0_out -> d2_0_in -> X2_0_in -> SKIP [] D3_0_out -> d3_0_in -> X3_0_in -> SKIP)
T1 = (D1_0_out -> d1_0_in -> X1_0_in -> SKIP [] (d1_0_out_1 -> SKIP; T1) [] X1_0_out_1 -> D1_1_out -> d1_1_in -> X1_1_in -> SKIP [] D2_0_out -> d2_0_in -> X2_0_in -> SKIP [] D3_0_out -> d3_0_in -> X3_0_in -> SKIP)
T2 = (D1_0_out -> d1_0_in -> X1_0_in -> SKIP [] (d1_0_out_1 -> SKIP; T2) [] X1_0_out_1 -> D1_1_out -> d1_1_in -> X1_1_in -> SKIP [] D2_0_out -> d2_0_in -> X2_0_in -> SKIP [] D3_0_out -> d3_0_in -> X3_0_in -> SKIP)
T3 = (D0_0_out -> d0_0_in -> X0_0_in -> SKIP [] (d0_0_out_3 -> SKIP; T3) [] X0_0_out_3 -> D0_3_out -> d0_3_in -> X0_3_in -> SKIP)
T4 = (D0_3_out -> d0_3_in -> X0_3_in -> SKIP [] (d0_3_out_4 -> SKIP; T4) [] X0_3_out_4 -> D0_4_out -> d0_4_in -> X0_4_in -> SKIP)
T5 = (D0_3_out -> d0_3_in -> X0_3_in -> SKIP [] (d0_3_out_4 -> SKIP; T5) [] X0_3_out_4 -> D0_4_out -> d0_4_in -> X0_4_in -> SKIP)
T6 = (D0_1_out -> d0_1_in -> X0_1_in -> SKIP [] (d0_1_out_5 -> SKIP; T6) [] X0_1_out_5 -> D0_5_out -> d0_5_in -> X0_5_in -> SKIP)
T7 = (D0_2_out -> d0_2_in -> X0_2_in -> SKIP [] (d0_2_out_6 -> SKIP; T7) [] X0_2_out_6 -> D0_6_out -> d0_6_in -> X0_6_in -> SKIP)

P(0) = D0_0_in -> SKIP; D0_1_in -> SKIP; D0_2_in -> SKIP; D0_3_in -> SKIP; D0_4_in -> SKIP; D0_5_in -> SKIP; D0_6_in -> SKIP; (D1_0_out -> d1_0_in -> X1_0_in -> SKIP [] D2_0_out -> d2_0_in -> X2_0_in -> SKIP [] D3_0_out -> d3_0_in -> X3_0_in -> SKIP); S0_7_in -> SKIP; T0; S0_8_in -> SKIP; T1; S0_9_in -> SKIP; T2; S0_10_in -> SKIP; B0 -> SKIP
P(1) = T3; S1_0_in -> SKIP; D1_0_in -> SKIP; T4; S1_2_in -> SKIP; D1_1_in -> SKIP; T5; S1_4_in -> SKIP; B0 -> SKIP
P(2) = T6; S2_0_in -> SKIP; D2_0_in -> SKIP; (D0_5_out -> d0_5_in -> X0_5_in -> SKIP); S2_2_in -> SKIP; B0 -> SKIP
P(3) = T7; S3_0_in -> SKIP; D3_0_in -> SKIP; (D0_6_out -> d0_6_in -> X0_6_in -> SKIP); S3_2_in -> SKIP; B0 -> SKIP


P_num = {0..3}
Process = [|{B0}|] i:P_num @ P(i)

ch(0) = SKIP [] (D0_0_in -> SKIP; (SKIP [] D0_0_out -> SKIP))
ch(1) = SKIP [] d0_0_in -> SKIP; d0_0_out_skip_loop
ch(2) = [|{X0_0_in}|] i:{0..0} @ X0_0(i)
ch(3) = SKIP [] (D0_1_in -> SKIP; (SKIP [] D0_1_out -> SKIP))
ch(4) = SKIP [] d0_1_in -> SKIP; d0_1_out_skip_loop
ch(5) = [|{X0_1_in}|] i:{0..0} @ X0_1(i)
ch(6) = SKIP [] (D0_2_in -> SKIP; (SKIP [] D0_2_out -> SKIP))
ch(7) = SKIP [] d0_2_in -> SKIP; d0_2_out_skip_loop
ch(8) = [|{X0_2_in}|] i:{0..0} @ X0_2(i)
ch(9) = SKIP [] (D0_3_in -> SKIP; (SKIP [] D0_3_out -> SKIP))
ch(10) = SKIP [] d0_3_in -> SKIP; d0_3_out_skip_loop
ch(11) = [|{X0_3_in}|] i:{0..0} @ X0_3(i)
ch(12) = SKIP [] (D0_4_in -> SKIP; (SKIP [] D0_4_out -> SKIP))
ch(13) = SKIP [] d0_4_in -> SKIP
ch(14) = SKIP [] X0_4_in -> SKIP
ch(15) = SKIP [] (D0_5_in -> SKIP; (SKIP [] D0_5_out -> SKIP))
ch(16) = SKIP [] d0_5_in -> SKIP
ch(17) = SKIP [] X0_5_in -> SKIP
ch(18) = SKIP [] (D0_6_in -> SKIP; (SKIP [] D0_6_out -> SKIP))
ch(19) = SKIP [] d0_6_in -> SKIP
ch(20) = SKIP [] X0_6_in -> SKIP
ch(21) = SKIP [] (D1_0_in -> SKIP; (SKIP [] D1_0_out -> SKIP))
ch(22) = SKIP [] d1_0_in -> SKIP; d1_0_out_skip_loop
ch(23) = [|{X1_0_in}|] i:{0..0} @ X1_0(i)
ch(24) = SKIP [] (D1_1_in -> SKIP; (SKIP [] D1_1_out -> SKIP))
ch(25) = SKIP [] d1_1_in -> SKIP
ch(26) = SKIP [] X1_1_in -> SKIP
ch(27) = SKIP [] (D2_0_in -> SKIP; (SKIP [] D2_0_out -> SKIP))
ch(28) = SKIP [] d2_0_in -> SKIP
ch(29) = SKIP [] X2_0_in -> SKIP
ch(30) = SKIP [] (D3_0_in -> SKIP; (SKIP [] D3_0_out -> SKIP))
ch(31) = SKIP [] d3_0_in -> SKIP
ch(32) = SKIP [] X3_0_in -> SKIP
ch(33) = SKIP [] (S0_7_in -> SKIP; (SKIP [] S0_7_out -> SKIP))
ch(34) = SKIP [] (S0_8_in -> SKIP; (SKIP [] S0_8_out -> SKIP))
ch(35) = SKIP [] (S0_9_in -> SKIP; (SKIP [] S0_9_out -> SKIP))
ch(36) = SKIP [] (S0_10_in -> SKIP; (SKIP [] S0_10_out -> SKIP))
ch(37) = SKIP [] (S1_0_in -> SKIP; (SKIP [] S1_0_out -> SKIP))
ch(38) = SKIP [] (S1_2_in -> SKIP; (SKIP [] S1_2_out -> SKIP))
ch(39) = SKIP [] (S1_4_in -> SKIP; (SKIP [] S1_4_out -> SKIP))
ch(40) = SKIP [] (S2_0_in -> SKIP; (SKIP [] S2_0_out -> SKIP))
ch(41) = SKIP [] (S2_2_in -> SKIP; (SKIP [] S2_2_out -> SKIP))
ch(42) = SKIP [] (S3_0_in -> SKIP; (SKIP [] S3_0_out -> SKIP))
ch(43) = SKIP [] (S3_2_in -> SKIP; (SKIP [] S3_2_out -> SKIP))
ch_num = {0..43}
Channel = [|{}|] i:ch_num @ ch(i)

Q = (Process [|{D0_0_in, D0_0_out, d0_0_in, X0_0_in, D0_1_in, D0_1_out, d0_1_in, X0_1_in, D0_2_in, D0_2_out, d0_2_in, X0_2_in, D0_3_in, D0_3_out, d0_3_in, X0_3_in, D0_4_in, D0_4_out, d0_4_in, X0_4_in, D0_5_in, D0_5_out, d0_5_in, X0_5_in, D0_6_in, D0_6_out, d0_6_in, X0_6_in, D1_0_in, D1_0_out, d1_0_in, X1_0_in, D1_1_in, D1_1_out, d1_1_in, X1_1_in, D2_0_in, D2_0_out, d2_0_in, X2_0_in, D3_0_in, D3_0_out, d3_0_in, X3_0_in, S0_7_in, S0_7_out, S0_8_in, S0_8_out, S0_9_in, S0_9_out, S0_10_in, S0_10_out, S1_0_in, S1_0_out, S1_2_in, S1_2_out, S1_4_in, S1_4_out, S2_0_in, S2_0_out, S2_2_in, S2_2_out, S3_0_in, S3_0_out, S3_2_in, S3_2_out, d1_0_out_1, X1_0_out_1, d0_0_out_3, X0_0_out_3, d0_3_out_4, X0_3_out_4, d0_1_out_5, X0_1_out_5, d0_2_out_6, X0_2_out_6}|] Channel); skip_loop

assert Q :[deadlock free[F]]