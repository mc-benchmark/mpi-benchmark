channel D0_0_in
channel D0_0_out
channel d0_0_in
channel X0_0_in
channel D0_1_in
channel D0_1_out
channel d0_1_in
channel X0_1_in
channel D0_2_in
channel D0_2_out
channel d0_2_in
channel X0_2_in
channel C1_0
channel c1_0_in
channel Y1_0_in
channel C1_1
channel c1_1_in
channel Y1_1_in
channel S0_2_in
channel S0_2_out
channel S0_3_in
channel S0_3_out
channel S1_0_in
channel S1_0_out
channel S1_1_in
channel S1_1_out
channel S1_4_in
channel S1_4_out
channel d0_0_out_2
channel X0_0_out_2

skip_loop = SKIP; skip_loop
d0_0_out_skip_loop = SKIP [] (d0_0_out_2 -> SKIP); d0_0_out_skip_loop
X0_0(0) = SKIP [] (X0_0_in -> SKIP; (SKIP [] X0_0_out_2 -> SKIP))

T0 = (D0_0_out -> d0_0_in -> X0_0_in -> SKIP [] (d0_0_out_2 -> SKIP; T0) [] S0_2_out -> S0_3_out -> X0_0_out_2 -> D0_2_out -> d0_2_in -> X0_2_in -> SKIP)

P(0) = D0_0_in -> SKIP; D0_1_in -> SKIP; (C1_0 -> c1_0_in -> Y1_0_in -> SKIP); S0_2_in -> SKIP; (C1_1 -> c1_1_in -> Y1_1_in -> SKIP); S0_3_in -> SKIP; D0_2_in -> SKIP
P(1) = (D0_0_out -> d0_0_in -> X0_0_in -> SKIP); S1_0_in -> SKIP; (D0_1_out -> d0_1_in -> X0_1_in -> SKIP); S1_1_in -> SKIP; C1_0 ->SKIP; C1_1 ->SKIP; T0; S1_4_in -> SKIP


Process = P(0) [|{C1_1, C1_0}|] P(1) 

ch(0) = SKIP [] (D0_0_in -> SKIP; (SKIP [] D0_0_out -> SKIP))
ch(1) = SKIP [] d0_0_in -> SKIP; d0_0_out_skip_loop
ch(2) = [|{X0_0_in}|] i:{0..0} @ X0_0(i)
ch(3) = SKIP [] (D0_1_in -> SKIP; (SKIP [] D0_1_out -> SKIP))
ch(4) = SKIP [] d0_1_in -> SKIP
ch(5) = SKIP [] X0_1_in -> SKIP
ch(6) = SKIP [] (D0_2_in -> SKIP; (SKIP [] D0_2_out -> SKIP))
ch(7) = SKIP [] d0_2_in -> SKIP
ch(8) = SKIP [] X0_2_in -> SKIP
ch(9) = SKIP [] c1_0_in -> SKIP
ch(10) = SKIP [] Y1_0_in -> SKIP
ch(11) = SKIP [] c1_1_in -> SKIP
ch(12) = SKIP [] Y1_1_in -> SKIP
ch(13) = SKIP [] (S0_2_in -> SKIP; (SKIP [] S0_2_out -> SKIP))
ch(14) = SKIP [] (S0_3_in -> SKIP; (SKIP [] S0_3_out -> SKIP))
ch(15) = SKIP [] (S1_0_in -> SKIP; (SKIP [] S1_0_out -> SKIP))
ch(16) = SKIP [] (S1_1_in -> SKIP; (SKIP [] S1_1_out -> SKIP))
ch(17) = SKIP [] (S1_4_in -> SKIP; (SKIP [] S1_4_out -> SKIP))
ch_num = {0..17}
Channel = [|{}|] i:ch_num @ ch(i)

Q = (Process [|{D0_0_in, D0_0_out, d0_0_in, X0_0_in, D0_1_in, D0_1_out, d0_1_in, X0_1_in, D0_2_in, D0_2_out, d0_2_in, X0_2_in, c1_0_in, Y1_0_in, c1_1_in, Y1_1_in, S0_2_in, S0_2_out, S0_3_in, S0_3_out, S1_0_in, S1_0_out, S1_1_in, S1_1_out, S1_4_in, S1_4_out, d0_0_out_2, X0_0_out_2}|] Channel); skip_loop

assert Q :[deadlock free[F]]