channel D0_0_in
channel D0_0_out
channel d0_0_in
channel X0_0_in
channel D1_0_in
channel D1_0_out
channel d1_0_in
channel X1_0_in
channel D1_1_in
channel D1_1_out
channel d1_1_in
channel X1_1_in
channel D2_0_in
channel D2_0_out
channel d2_0_in
channel X2_0_in
channel D4_0_in
channel D4_0_out
channel d4_0_in
channel X4_0_in
channel S0_0_in
channel S0_0_out
channel S0_2_in
channel S0_2_out
channel S2_0_in
channel S2_0_out
channel S3_0_in
channel S3_0_out
channel S3_1_in
channel S3_1_out

skip_loop = SKIP; skip_loop


P(0) = (D1_0_out -> d1_0_in -> X1_0_in -> SKIP [] D2_0_out -> d2_0_in -> X2_0_in -> SKIP); S0_0_in -> SKIP; D0_0_in -> SKIP; (D1_0_out -> d1_0_in -> X1_0_in -> SKIP [] D2_0_out -> d2_0_in -> X2_0_in -> SKIP); S0_2_in -> SKIP
P(1) = D1_0_in -> SKIP; D1_1_in -> SKIP
P(2) = (D4_0_out -> d4_0_in -> X4_0_in -> SKIP); S2_0_in -> SKIP; D2_0_in -> SKIP
P(3) = (D1_1_out -> d1_1_in -> X1_1_in -> SKIP); S3_0_in -> SKIP; (D0_0_out -> d0_0_in -> X0_0_in -> SKIP); S3_1_in -> SKIP
P(4) = D4_0_in -> SKIP


P_num = {0..4}
Process = [|{}|] i:P_num @ P(i)

ch(0) = SKIP [] (D0_0_in -> SKIP; (SKIP [] D0_0_out -> SKIP))
ch(1) = SKIP [] d0_0_in -> SKIP
ch(2) = SKIP [] X0_0_in -> SKIP
ch(3) = SKIP [] (D1_0_in -> SKIP; (SKIP [] D1_0_out -> SKIP))
ch(4) = SKIP [] d1_0_in -> SKIP
ch(5) = SKIP [] X1_0_in -> SKIP
ch(6) = SKIP [] (D1_1_in -> SKIP; (SKIP [] D1_1_out -> SKIP))
ch(7) = SKIP [] d1_1_in -> SKIP
ch(8) = SKIP [] X1_1_in -> SKIP
ch(9) = SKIP [] (D2_0_in -> SKIP; (SKIP [] D2_0_out -> SKIP))
ch(10) = SKIP [] d2_0_in -> SKIP
ch(11) = SKIP [] X2_0_in -> SKIP
ch(12) = SKIP [] (D4_0_in -> SKIP; (SKIP [] D4_0_out -> SKIP))
ch(13) = SKIP [] d4_0_in -> SKIP
ch(14) = SKIP [] X4_0_in -> SKIP
ch(15) = SKIP [] (S0_0_in -> SKIP; (SKIP [] S0_0_out -> SKIP))
ch(16) = SKIP [] (S0_2_in -> SKIP; (SKIP [] S0_2_out -> SKIP))
ch(17) = SKIP [] (S2_0_in -> SKIP; (SKIP [] S2_0_out -> SKIP))
ch(18) = SKIP [] (S3_0_in -> SKIP; (SKIP [] S3_0_out -> SKIP))
ch(19) = SKIP [] (S3_1_in -> SKIP; (SKIP [] S3_1_out -> SKIP))
ch_num = {0..19}
Channel = [|{}|] i:ch_num @ ch(i)

Q = (Process [|{D0_0_in, D0_0_out, d0_0_in, X0_0_in, D1_0_in, D1_0_out, d1_0_in, X1_0_in, D1_1_in, D1_1_out, d1_1_in, X1_1_in, D2_0_in, D2_0_out, d2_0_in, X2_0_in, D4_0_in, D4_0_out, d4_0_in, X4_0_in, S0_0_in, S0_0_out, S0_2_in, S0_2_out, S2_0_in, S2_0_out, S3_0_in, S3_0_out, S3_1_in, S3_1_out}|] Channel); skip_loop

assert Q :[deadlock free[F]]