channel D0_0 1;
channel D0_1 1;
channel D0_2 1;
channel D0_3 1;
channel D0_4 1;
channel D1_0 1;
channel D1_1 1;
channel D1_2 1;
channel D1_3 1;
channel D1_4 1;
channel D1_5 1;
channel D1_6 1;
P0=(D0_0!0->Skip); (D0_0?0->Skip [] [call(cempty,D0_0)]D0_1?0->Skip); (D0_1!0->Skip); (D0_1?0->Skip); (D0_2!0->Skip); (D1_2?0->Skip [] [call(cempty,D1_2)]D1_3?0->Skip [] [call(cempty,D1_3)]D1_5?0->Skip); (D0_3!0->Skip); (D1_2?0->Skip [] [call(cempty,D1_2)]D1_3?0->Skip); (D1_4?0->Skip); (D0_4!0->Skip); (D1_2?0->Skip [] [call(cempty,D1_2)]D1_3?0->Skip [] [call(cempty,D1_3)]D1_5?0->Skip [] [call(cempty,D1_5)]D1_6?0->Skip); (D1_3?0->Skip [] [call(cempty,D1_3)]D1_5?0->Skip [] [call(cempty,D1_5)]D1_6?0->Skip);
P1=(D1_0!0->Skip); (D1_0?0->Skip [] [call(cempty,D1_0)]D1_1?0->Skip); (D1_1!0->Skip); (D1_1?0->Skip); (D1_2!0->Skip); (D0_2?0->Skip [] [call(cempty,D0_2)]D0_3?0->Skip); (D1_3!0->Skip); (D0_3?0->Skip); (D1_4!0->Skip); (D0_4?0->Skip); (D1_5!0->Skip); (D1_6!0->Skip); 
P=P0||P1;
#assert P deadlockfree;